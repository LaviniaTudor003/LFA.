/* LAVINIA TUDOR 334CC */

Tema am rezolvat-o folosind C++.


Principala provocare a fost manipularea starilor pentru a gestiona corect diferitele sectiuni ale inputului. Am rezolvat acest lucru folosind o stiva de stari (yy_push_state si yy_pop_state) care imi permite sa procesez secvential fiecare componenta, fara a utiliza functii suplimentare de procesare a string-urilor. Un aspect important al implementarii este modularitatea, deoarece fiecare componenta este tratata independent, cu stari si logica dedicate, permitand o intretinere si extindere usoara a codului.
Ce m-a pus cel mai mult pe ganduri a fost mentinerea corecta a stivei din FLEX pentru a face conditiile de start reutilizabile. Am ajuns la concluzia ca pot apela mai multe functii de pop/push consecutiv, precum pop urmat imediat de push, pentru a manipula eficient stiva. Spre exemplu, cand am de citit o variabila locala, pune imediat pe stiva conditiile "variabila_locala", "sterge_inceput_variabila" si "citeste_nume_variabila_locala". Daca citesc o variabila globala trebuie sa schimb doar prima si ultima conditie, "sterge_inceput_variabila" fiind comuna pentru ambele.
O alta provocare a fost gestionarea corecta a variabilelor complexe, in special in cazul tranzitiilor. Am rezolvat acest aspect prin expandarea domeniului variabilelor in momentul procesarii tranzitiilor, asigurand astfel o implementare robusta si flexibila.
In rest tema mi s-a parut destul de intuitiva si consider ca am facut o implementare destul de basic. Am facut reguli pentru cazurile specifice starilor in care ma aflu, precum citirea unui alfabet sau a tranzitiilor, unde scriam in stdout ce se cerea si/sau treceam in alte stari. Expresiile regulate nu mi s-au parut o provocare, ba au fost chiar partea mea preferata.